- name: Check if Docker is installed
  shell: systemctl status docker
  register: docker_check
  tags: swarm
  ignore_errors: true

- name: Install Docker
  import_tasks: installDocker.yml
  when: docker_check.stderr.find('service could not be found') != -1

- name: Enable the Docker daemon in systemd
  systemd:
    name: docker
    enabled: yes
    masked: no

- name: Start the Docker daemon
  systemd:
    name: docker
    state: started
    masked: no

- name: Check if Docker Compose is installed
  shell: docker-compose --version
  register: docker_compose_check
  ignore_errors: true

- name: debug
  debug:
    msg: "check: {{ docker_compose_check }} and: {{ docker_compose_check.msg.find('command not found') }}"

- name: Download and install Docker Compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.21.2/docker-compose-Linux-x86_64
    dest: /usr/bin/docker-compose
    mode: 0755
  when:
    - docker_compose_check.msg is defined
    - docker_compose_check.msg.find('command not found') == -1

- name: Setup Docker REST API
  lineinfile:
    path: /lib/systemd/system/docker.service
    regexp: 'ExecStart=*'
    line: ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock -H=tcp://0.0.0.0:5555
    backrefs: yes

- name: reload systemd
  become: true
  shell: systemctl daemon-reload

- name: Start the Docker daemon
  systemd:
    name: docker
    state: restarted

- name: Configure Hosts File
  lineinfile: path=/etc/hosts regexp='.*{{ hostvars[item].ansible_nodename }}$' line="{{item}} {{ hostvars[item].ansible_nodename }}" state=present
  #lineinfile: path=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}" state=present
  #when: hostvars[item].ansible_default_ipv4.address is defined
  with_items: "{{ groups['all'] }}"

- name: Copy Public Key Locally
  fetch:
    src: /home/docker/.ssh/id_rsa.pub
    dest: /tmp/
    flat: yes

- name: Copy SSH Configuration
  copy:
    src: ../files/ssh_config
    dest: /home/docker/.ssh/config
    mode: 0644

- name: empty known_hosts
  file:
    state: absent
    path: ~/.ssh/known_hosts

- name: run ssh-keyscan to add keys to known_hosts
  shell: "ssh-keyscan {{ item }} >> ~/.ssh/known_hosts"
  with_items: "{{ groups['all'] }}"

- name: Copy Public Key to Other Hosts
  become: true
  become_user: docker
  copy:
    src: /tmp/id_rsa.pub
    dest: /tmp/id_rsa.pub
    mode: 0644

- name: Append Public key in authorized_keys file
  authorized_key:
    user: docker
    state: present
    key: "{{ lookup('file', '/tmp/id_rsa.pub') }}"
